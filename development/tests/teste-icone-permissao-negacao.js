/* üé® TESTE ESPEC√çFICO - SUBSTITUI√á√ÉO √çCONE PERMISS√ÉO/NEGA√á√ÉO
 * Execute este script no console para testar a substitui√ß√£o do √≠cone
 * "Permiss√£o/Nega√ß√£o Expressa" (menos.gif ‚Üí lucide ban icon)
 */

console.log("üé® TESTE: Substitui√ß√£o do √≠cone Permiss√£o/Nega√ß√£o Expressa");
console.log("=".repeat(60));

function testarSubstituicaoIconePermissao() {
    try {
        // Verificar se a extens√£o est√° carregada
        if (typeof window.SENT1_AUTO === "undefined") {
            console.log("‚ùå ERRO: Extens√£o eProbe n√£o carregada");
            return false;
        }

        console.log("‚úÖ Extens√£o eProbe detectada");

        // Procurar o bot√£o de Permiss√£o/Nega√ß√£o Expressa
        const botaoPermissao = Array.from(
            document.querySelectorAll("a.infraButton")
        ).find((a) => a.textContent.includes("Permiss√£o/Nega√ß√£o"));

        if (!botaoPermissao) {
            console.log(
                "‚ö†Ô∏è AVISO: Bot√£o 'Permiss√£o/Nega√ß√£o Expressa' n√£o encontrado na p√°gina atual"
            );
            console.log(
                "üí° DICA: Este teste funciona apenas em p√°ginas de processo que possuem este bot√£o"
            );
            return false;
        }

        console.log(
            "‚úÖ Bot√£o 'Permiss√£o/Nega√ß√£o Expressa' encontrado:",
            botaoPermissao
        );

        // Verificar se o √≠cone original existe
        const iconOriginal = botaoPermissao.querySelector(
            'img[src*="menos.gif"]'
        );
        const iconSvg = botaoPermissao.querySelector("svg.lucide-ban");

        console.log("üîç Status do √≠cone:");
        console.log(
            `  - √çcone original (menos.gif): ${
                iconOriginal ? "ENCONTRADO" : "N√ÉO ENCONTRADO"
            }`
        );
        console.log(
            `  - √çcone SVG (lucide-ban): ${
                iconSvg ? "ENCONTRADO" : "N√ÉO ENCONTRADO"
            }`
        );

        if (iconSvg) {
            console.log("‚úÖ SUCESSO: √çcone j√° foi substitu√≠do pelo SVG!");
            console.log("üìè Dimens√µes do SVG:", {
                width: iconSvg.style.width || iconSvg.getAttribute("width"),
                height: iconSvg.style.height || iconSvg.getAttribute("height"),
            });
            return true;
        }

        if (iconOriginal) {
            console.log(
                "üîÑ STATUS: √çcone original encontrado, substitui√ß√£o ainda n√£o aplicada"
            );

            // Verificar se as fun√ß√µes de substitui√ß√£o existem
            if (
                typeof window.SENT1_AUTO.forcarReaplicacaoIcones === "function"
            ) {
                console.log("üîß Executando substitui√ß√£o for√ßada...");
                window.SENT1_AUTO.forcarReaplicacaoIcones();

                // Aguardar um momento e verificar novamente
                setTimeout(() => {
                    const iconSvgApos =
                        botaoPermissao.querySelector("svg.lucide-ban");
                    if (iconSvgApos) {
                        console.log(
                            "‚úÖ SUCESSO: √çcone substitu√≠do com sucesso ap√≥s for√ßar reaplca√ß√£o!"
                        );
                    } else {
                        console.log(
                            "‚ùå ERRO: Substitui√ß√£o n√£o funcionou mesmo ap√≥s for√ßar"
                        );
                    }
                }, 500);
            } else {
                console.log(
                    "‚ö†Ô∏è AVISO: Fun√ß√£o de substitui√ß√£o for√ßada n√£o encontrada"
                );
            }

            return false;
        }

        console.log(
            "‚ùì STATUS: Nem √≠cone original nem SVG encontrados - estrutura inesperada"
        );
        return false;
    } catch (error) {
        console.error("‚ùå ERRO durante o teste:", error);
        return false;
    }
}

// Executar teste principal
const resultado = testarSubstituicaoIconePermissao();

console.log("\n" + "=".repeat(60));
console.log(`üéØ RESULTADO FINAL: ${resultado ? "SUCESSO" : "PENDENTE/ERRO"}`);

if (!resultado) {
    console.log("\nüí° DICAS PARA RESOLU√á√ÉO:");
    console.log("1. Certifique-se de estar em uma p√°gina de processo do eProc");
    console.log(
        "2. Verifique se o bot√£o 'Permiss√£o/Nega√ß√£o Expressa' existe na p√°gina"
    );
    console.log("3. Execute: window.SENT1_AUTO.forcarReaplicacaoIcones()");
    console.log("4. Aguarde alguns segundos e execute este teste novamente");
}

console.log("\nüîß COMANDOS √öTEIS:");
console.log(
    "‚Ä¢ For√ßar substitui√ß√£o: window.SENT1_AUTO.forcarReaplicacaoIcones()"
);
console.log(
    "‚Ä¢ Verificar todos os √≠cones: window.SENT1_AUTO.diagnosticarIconesCSS()"
);
console.log("‚Ä¢ Executar este teste novamente: Execute este script novamente");
