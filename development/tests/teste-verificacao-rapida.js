// =============================================================================
// üéØ TESTE R√ÅPIDO: VERIFICA√á√ÉO DE EXECU√á√ÉO CONSISTENTE
// =============================================================================
//
// Este script verifica se todas as funcionalidades est√£o executando conforme
// esperado ap√≥s os timeouts autom√°ticos da extens√£o.
//
// COMO USAR:
// 1. Recarregue a p√°gina do eProc
// 2. Aguarde 6 segundos para os timeouts executarem
// 3. Cole este c√≥digo no console
//
// =============================================================================

console.log("üéØ VERIFICA√á√ÉO: Iniciando teste de execu√ß√£o consistente");
console.log("üìç URL atual:", window.location.href);
console.log("‚è∞ Timestamp:", new Date().toLocaleString("pt-BR"));

// 1. Verificar modo ultra-performance
const modoUltraAtivo = window.SENT1_AUTO?.statusModoUltraPerformance
    ? window.SENT1_AUTO.statusModoUltraPerformance()
    : "INDISPON√çVEL";
console.log(`üî• Modo Ultra-Performance: ${modoUltraAtivo}`);

// 2. Verificar logs dos sistemas autom√°ticos
console.log("\nüìù LOGS ESPERADOS:");
console.log(
    "   - Deve aparecer: 'üé® √çCONES: Iniciando sistema automaticamente...'"
);
console.log(
    "   - Deve aparecer: 'üîß ROBUSTA: Verifica√ß√£o e corre√ß√£o de inconsist√™ncias...'"
);

// 3. Verificar elementos na p√°gina
console.log("\nüîç VERIFICA√á√ÉO DOS ELEMENTOS:");

// Bot√£o Resumir Documento
const botoes = [
    document.getElementById("documento-relevante-auto-button"),
    document.getElementById("sent1-auto-button"),
    document.getElementById("eprobe-btn"),
].filter(Boolean);

console.log(`üîò Bot√µes encontrados: ${botoes.length}`);
botoes.forEach((btn, i) => {
    console.log(`   ${i + 1}. ID: ${btn.id}, Classes: ${btn.className}`);
});

// Fieldset de a√ß√µes
const fieldsetAcoes = document.querySelector("#fldAcoes.infraFieldset");
if (fieldsetAcoes) {
    const iconesGIF = fieldsetAcoes.querySelectorAll('img[src*=".gif"]');
    const iconesSVG = fieldsetAcoes.querySelectorAll("svg.lucide");

    console.log(`üé® Fieldset #fldAcoes encontrado:`);
    console.log(`   - √çcones GIF restantes: ${iconesGIF.length}`);
    console.log(`   - √çcones SVG (novos): ${iconesSVG.length}`);

    if (iconesGIF.length > 0) {
        console.log("‚ö†Ô∏è Ainda h√° √≠cones GIF n√£o substitu√≠dos:");
        iconesGIF.forEach((img, i) => {
            console.log(`   ${i + 1}. src: ${img.src.split("/").pop()}`);
        });
    }
} else {
    console.log("‚ùå Fieldset #fldAcoes n√£o encontrado");
}

// √çcones marcados como substitu√≠dos
const iconesSubstituidos = document.querySelectorAll(
    "[data-eprobe-icon-replaced]"
);
console.log(
    `üé® √çcones marcados como substitu√≠dos: ${iconesSubstituidos.length}`
);

// 4. Verificar namespace SENT1_AUTO
const funcoesDiagnostico = ["diagnosticarCompleto", "corrigirProblemas"];
console.log("\nüì¶ FUN√á√ïES DE DIAGN√ìSTICO:");
funcoesDiagnostico.forEach((func) => {
    const existe = typeof window.SENT1_AUTO?.[func] === "function";
    console.log(
        `   ${existe ? "‚úÖ" : "‚ùå"} ${func}: ${
            existe ? "DISPON√çVEL" : "INDISPON√çVEL"
        }`
    );
});

// 5. Resumo de status
console.log("\nüìä RESUMO DE STATUS:");
const status = {
    botaoPresente: botoes.length > 0,
    iconesSubstituidos: iconesSubstituidos.length > 0,
    fieldsetEncontrado: !!fieldsetAcoes,
    namespaceDisponivel: typeof window.SENT1_AUTO === "object",
};

Object.entries(status).forEach(([chave, valor]) => {
    console.log(
        `   ${valor ? "‚úÖ" : "‚ùå"} ${chave}: ${valor ? "OK" : "PROBLEMA"}`
    );
});

// 6. Executar diagn√≥stico se dispon√≠vel
if (typeof window.SENT1_AUTO?.diagnosticarCompleto === "function") {
    console.log("\nüîç EXECUTANDO DIAGN√ìSTICO AUTOM√ÅTICO:");
    try {
        const resultado = window.SENT1_AUTO.diagnosticarCompleto();
        console.log("‚úÖ Diagn√≥stico conclu√≠do - veja detalhes acima");
    } catch (error) {
        console.error("‚ùå Erro no diagn√≥stico:", error);
    }
} else {
    console.log("\n‚ùå Fun√ß√£o de diagn√≥stico n√£o dispon√≠vel");
}

console.log("\nüéØ VERIFICA√á√ÉO CONCLU√çDA");
console.log("=".repeat(50));
