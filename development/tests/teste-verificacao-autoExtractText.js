// ============================================================================
// üöÄ TESTE VERIFICA√á√ÉO - autoExtractText
// ============================================================================
// Objetivo: Verificar se a fun√ß√£o est√° acess√≠vel e funcionando
// Usar: Cole este c√≥digo no console do navegador em uma p√°gina do eProc
// ============================================================================

console.log("üîç TESTE: Verificando autoExtractText...");

// 1. Verificar se o namespace existe
if (typeof window.SENT1_AUTO === "undefined") {
    console.log("‚ùå ERRO: Namespace window.SENT1_AUTO n√£o encontrado");
} else {
    console.log("‚úÖ Namespace window.SENT1_AUTO encontrado");
}

// 2. Verificar se a fun√ß√£o espec√≠fica existe
if (typeof window.SENT1_AUTO.autoExtractText === "undefined") {
    console.log("‚ùå ERRO: Fun√ß√£o autoExtractText n√£o encontrada no namespace");
} else {
    console.log("‚úÖ Fun√ß√£o autoExtractText encontrada no namespace");
    console.log("üìã Tipo:", typeof window.SENT1_AUTO.autoExtractText);
}

// 3. Verificar fun√ß√µes relacionadas
const funcoesRelacionadas = [
    "autoOpenDocumentoRelevante",
    "copyToClipboard",
    "detectPageType",
    "showNotification",
];

console.log("üìã FUN√á√ïES RELACIONADAS:");
funcoesRelacionadas.forEach((funcName) => {
    if (typeof window.SENT1_AUTO[funcName] !== "undefined") {
        console.log(`   ‚úÖ ${funcName}: ${typeof window.SENT1_AUTO[funcName]}`);
    } else {
        console.log(`   ‚ùå ${funcName}: n√£o encontrada`);
    }
});

// 4. Listar todas as fun√ß√µes dispon√≠veis no namespace (resumo)
console.log("üìã TOTAL DE FUN√á√ïES NO NAMESPACE:");
if (typeof window.SENT1_AUTO !== "undefined") {
    const totalFuncoes = Object.keys(window.SENT1_AUTO).length;
    console.log(`   Total: ${totalFuncoes} fun√ß√µes dispon√≠veis`);

    // Mostrar apenas as primeiras 10 para n√£o poluir o console
    console.log("   Primeiras fun√ß√µes:");
    Object.keys(window.SENT1_AUTO)
        .slice(0, 10)
        .forEach((funcName) => {
            console.log(`   ‚Ä¢ ${funcName}`);
        });

    if (totalFuncoes > 10) {
        console.log(`   ... e mais ${totalFuncoes - 10} fun√ß√µes`);
    }
}

// 5. Teste espec√≠fico da fun√ß√£o autoExtractText
console.log("üîß TESTE ESPEC√çFICO:");
try {
    if (typeof window.SENT1_AUTO.autoExtractText === "function") {
        console.log("‚úÖ Fun√ß√£o √© cham√°vel");
        console.log(
            "üí° Para testar execu√ß√£o, v√° para uma p√°gina de documento e execute:"
        );
        console.log("   await window.SENT1_AUTO.autoExtractText()");

        // Testar se detectPageType funciona (fun√ß√£o auxiliar)
        if (typeof window.SENT1_AUTO.detectPageType === "function") {
            const pageType = window.SENT1_AUTO.detectPageType();
            console.log(`üìç Tipo de p√°gina atual: "${pageType}"`);
        }
    } else {
        console.log("‚ùå Fun√ß√£o n√£o √© cham√°vel");
    }
} catch (error) {
    console.log("‚ùå Erro ao verificar fun√ß√£o:", error);
}

console.log("üéØ TESTE CONCLU√çDO - autoExtractText");
console.log(
    "üìå STATUS:",
    typeof window.SENT1_AUTO?.autoExtractText === "function"
        ? "FUNCIONANDO"
        : "COM PROBLEMAS"
);
