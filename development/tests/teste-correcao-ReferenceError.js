// TESTE DE CORRE√á√ÉO DE ReferenceError - VARI√ÅVEIS DE ESCOPO
// Executar no console do navegador (eProc) ap√≥s carregar extens√£o

console.log("üß™ INICIANDO TESTE DE CORRE√á√ÉO DE ReferenceError...");

// Teste 1: Verificar se processosJaProcessados existe
console.log("1. Testando processosJaProcessados:");
try {
    if (typeof window.processosJaProcessados !== "undefined") {
        console.log("‚úÖ processosJaProcessados est√° definido globalmente");
    } else {
        console.log("‚ùå processosJaProcessados N√ÉO est√° definido globalmente");

        // Verificar atrav√©s da fun√ß√£o que a usa
        const testResult = window.SENT1_AUTO.processoJaFoiProcessado
            ? "‚úÖ Fun√ß√£o processoJaFoiProcessado existe"
            : "‚ùå Fun√ß√£o processoJaFoiProcessado N√ÉO existe";
        console.log(testResult);
    }
} catch (error) {
    console.log("‚ùå Erro ao testar processosJaProcessados:", error.message);
}

// Teste 2: Verificar se buttonCreationAttempts existe
console.log("\n2. Testando buttonCreationAttempts:");
try {
    if (typeof window.buttonCreationAttempts !== "undefined") {
        console.log("‚úÖ buttonCreationAttempts est√° definido globalmente");
    } else {
        console.log("‚ùå buttonCreationAttempts N√ÉO est√° definido globalmente");

        // Verificar atrav√©s da fun√ß√£o que a usa
        const testResult = window.SENT1_AUTO.ensureButtonExists
            ? "‚úÖ Fun√ß√£o ensureButtonExists existe"
            : "‚ùå Fun√ß√£o ensureButtonExists N√ÉO existe";
        console.log(testResult);
    }
} catch (error) {
    console.log("‚ùå Erro ao testar buttonCreationAttempts:", error.message);
}

// Teste 3: Verificar se MAX_BUTTON_CREATION_ATTEMPTS existe
console.log("\n3. Testando MAX_BUTTON_CREATION_ATTEMPTS:");
try {
    if (typeof window.MAX_BUTTON_CREATION_ATTEMPTS !== "undefined") {
        console.log(
            "‚úÖ MAX_BUTTON_CREATION_ATTEMPTS est√° definido globalmente"
        );
    } else {
        console.log(
            "‚ùå MAX_BUTTON_CREATION_ATTEMPTS N√ÉO est√° definido globalmente"
        );
    }
} catch (error) {
    console.log(
        "‚ùå Erro ao testar MAX_BUTTON_CREATION_ATTEMPTS:",
        error.message
    );
}

// Teste 4: Executar fun√ß√£o que teve ReferenceError
console.log("\n4. Testando execu√ß√£o de fun√ß√£o problem√°tica:");
try {
    if (window.SENT1_AUTO.processoJaFoiProcessado) {
        const processo = "123456789"; // N√∫mero fake para teste
        const result = window.SENT1_AUTO.processoJaFoiProcessado(processo);
        console.log(
            "‚úÖ processoJaFoiProcessado executou sem ReferenceError, resultado:",
            result
        );
    } else {
        console.log("‚ùå Fun√ß√£o processoJaFoiProcessado n√£o encontrada");
    }
} catch (error) {
    console.log("‚ùå ReferenceError ainda existe:", error.message);
}

// Teste 5: Executar fun√ß√£o ensureButtonExists
console.log("\n5. Testando ensureButtonExists:");
try {
    if (window.SENT1_AUTO.ensureButtonExists) {
        console.log("‚ö†Ô∏è Fun√ß√£o ensureButtonExists encontrada no namespace");
        // N√£o executamos pois pode criar bot√µes desnecess√°rios
        console.log("‚úÖ (N√£o executado para evitar efeitos colaterais)");
    } else {
        console.log("‚ùå Fun√ß√£o ensureButtonExists n√£o encontrada no namespace");
        console.log("‚ÑπÔ∏è Verificando se existe globalmente...");
        if (typeof ensureButtonExists !== "undefined") {
            console.log(
                "‚ö†Ô∏è ensureButtonExists existe globalmente mas n√£o no namespace"
            );
        } else {
            console.log("‚ùå ensureButtonExists n√£o existe em lugar algum");
        }
    }
} catch (error) {
    console.log("‚ùå Erro ao testar ensureButtonExists:", error.message);
}

console.log("\nüèÅ TESTE CONCLU√çDO");
