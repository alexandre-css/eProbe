/* üîß DIAGN√ìSTICO E CORRE√á√ÉO IMEDIATA - eProbe
 * Execute este script no console para diagnosticar e corrigir problemas
 */

console.log("üîß DIAGN√ìSTICO: Verificando problemas do eProbe");
console.log("=".repeat(60));

function diagnosticarECorrigirEprobe() {
    let problemas = [];
    let correcoes = [];

    try {
        // 1. Verificar se extens√£o est√° carregada
        if (typeof window.SENT1_AUTO === "undefined") {
            problemas.push("‚ùå Namespace SENT1_AUTO n√£o encontrado");
            return { problemas, correcoes };
        }

        console.log("‚úÖ DIAGN√ìSTICO: Namespace SENT1_AUTO encontrado");

        // 2. Verificar modo ultra-performance
        if (
            typeof window.SENT1_AUTO.statusModoUltraPerformance === "function"
        ) {
            const modoUltraAtivo =
                window.SENT1_AUTO.statusModoUltraPerformance();
            if (modoUltraAtivo) {
                problemas.push(
                    "‚ö†Ô∏è MODO ULTRA-PERFORMANCE ATIVO - bloqueando fun√ß√µes"
                );
                console.log(
                    "üîß CORRE√á√ÉO: Desativando modo ultra-performance..."
                );
                window.SENT1_AUTO.desativarModoUltraPerformance();
                correcoes.push("‚úÖ Modo ultra-performance desativado");
            } else {
                console.log(
                    "‚úÖ DIAGN√ìSTICO: Modo ultra-performance est√° inativo"
                );
            }
        }

        // 3. Verificar substitui√ß√£o de √≠cones
        console.log("\nüé® DIAGN√ìSTICO: Verificando substitui√ß√£o de √≠cones...");
        const fieldsetAcoes = document.querySelector("#fldAcoes.infraFieldset");
        if (fieldsetAcoes) {
            console.log("‚úÖ DIAGN√ìSTICO: Fieldset de a√ß√µes encontrado");

            // Procurar por √≠cones antigos (GIF)
            const iconesGIF =
                fieldsetAcoes.querySelectorAll('img[src*=".gif"]');
            const iconesSVG = fieldsetAcoes.querySelectorAll("svg.lucide");

            console.log(
                `üìä DIAGN√ìSTICO: ${iconesGIF.length} √≠cones GIF encontrados, ${iconesSVG.length} √≠cones SVG encontrados`
            );

            if (iconesGIF.length > 0 && iconesSVG.length === 0) {
                problemas.push(
                    `‚ö†Ô∏è ${iconesGIF.length} √≠cones n√£o foram substitu√≠dos`
                );

                if (
                    typeof window.SENT1_AUTO.forcarReaplicacaoIcones ===
                    "function"
                ) {
                    console.log(
                        "üîß CORRE√á√ÉO: For√ßando substitui√ß√£o de √≠cones..."
                    );
                    window.SENT1_AUTO.forcarReaplicacaoIcones();
                    correcoes.push("‚úÖ Substitui√ß√£o de √≠cones for√ßada");
                } else {
                    problemas.push(
                        "‚ùå Fun√ß√£o de substitui√ß√£o de √≠cones n√£o encontrada"
                    );
                }
            } else if (iconesSVG.length > 0) {
                console.log("‚úÖ DIAGN√ìSTICO: √çcones SVG j√° aplicados");
            }
        } else {
            console.log(
                "‚ÑπÔ∏è DIAGN√ìSTICO: Fieldset de a√ß√µes n√£o encontrado (normal em algumas p√°ginas)"
            );
        }

        // 4. Verificar bot√£o "Resumir Documento"
        console.log("\nüìÑ DIAGN√ìSTICO: Verificando bot√£o Resumir Documento...");
        const botaoResumir =
            document.getElementById("documento-relevante-auto-button") ||
            document.getElementById("sent1-auto-button");

        if (!botaoResumir) {
            problemas.push("‚ùå Bot√£o 'Resumir Documento' n√£o encontrado");

            // Tentar for√ßar cria√ß√£o do bot√£o
            if (typeof window.SENT1_AUTO.forceCreateButton === "function") {
                console.log("üîß CORRE√á√ÉO: For√ßando cria√ß√£o do bot√£o...");
                window.SENT1_AUTO.forceCreateButton();
                correcoes.push("‚úÖ Cria√ß√£o de bot√£o for√ßada");
            } else {
                console.log(
                    "‚ö†Ô∏è DIAGN√ìSTICO: Fun√ß√£o de cria√ß√£o for√ßada n√£o encontrada"
                );
                // Tentar m√©todo alternativo
                if (typeof ensureButtonExists === "function") {
                    console.log("üîß CORRE√á√ÉO: Tentando m√©todo alternativo...");
                    ensureButtonExists();
                    correcoes.push(
                        "‚úÖ M√©todo alternativo de cria√ß√£o executado"
                    );
                }
            }
        } else {
            console.log("‚úÖ DIAGN√ìSTICO: Bot√£o 'Resumir Documento' encontrado");
        }

        // 5. Verificar se h√° links de documentos relevantes na p√°gina
        console.log("\nüîç DIAGN√ìSTICO: Verificando documentos relevantes...");
        const linksDocumentos = document.querySelectorAll(
            '[href*="acessar_documento"]'
        );
        const linksSENT = document.querySelectorAll('[href*="SENT"]');
        const linksINIC = document.querySelectorAll('[href*="INIC"]');

        console.log(
            `üìä DIAGN√ìSTICO: ${linksDocumentos.length} links de documento, ${linksSENT.length} SENT, ${linksINIC.length} INIC`
        );

        if (linksDocumentos.length === 0) {
            console.log(
                "‚ÑπÔ∏è DIAGN√ìSTICO: Nenhum documento relevante encontrado (normal em p√°ginas de lista)"
            );
        }

        // 6. Executar corre√ß√µes imediatas
        console.log("\nüîß CORRE√á√ÉO: Executando inicializa√ß√µes...");

        // For√ßar substitui√ß√£o de √≠cones se necess√°rio
        if (
            typeof window.SENT1_AUTO.inicializarSubstituicaoIcones ===
            "function"
        ) {
            console.log("üîß CORRE√á√ÉO: Executando inicializa√ß√£o de √≠cones...");
            window.SENT1_AUTO.inicializarSubstituicaoIcones();
            correcoes.push("‚úÖ Inicializa√ß√£o de √≠cones executada");
        }

        // Aguardar e verificar novamente
        setTimeout(() => {
            console.log("\nüîÑ VERIFICA√á√ÉO P√ìS-CORRE√á√ÉO:");
            const iconesGIFApos = fieldsetAcoes
                ? fieldsetAcoes.querySelectorAll('img[src*=".gif"]').length
                : 0;
            const iconesSVGApos = fieldsetAcoes
                ? fieldsetAcoes.querySelectorAll("svg.lucide").length
                : 0;
            const botaoResumir =
                document.getElementById("documento-relevante-auto-button") ||
                document.getElementById("sent1-auto-button");

            console.log(
                `üìä RESULTADO: ${iconesGIFApos} √≠cones GIF, ${iconesSVGApos} √≠cones SVG`
            );
            console.log(
                `üìÑ RESULTADO: Bot√£o Resumir ${
                    botaoResumir ? "ENCONTRADO" : "N√ÉO ENCONTRADO"
                }`
            );
        }, 2000);
    } catch (error) {
        problemas.push(`‚ùå Erro durante diagn√≥stico: ${error.message}`);
        console.error("‚ùå ERRO:", error);
    }

    return { problemas, correcoes };
}

// Executar diagn√≥stico
const resultado = diagnosticarECorrigirEprobe();

console.log("\n" + "=".repeat(60));
console.log("üìã RESUMO DO DIAGN√ìSTICO:");

if (resultado.problemas.length > 0) {
    console.log("\n‚ùå PROBLEMAS ENCONTRADOS:");
    resultado.problemas.forEach((problema) => console.log(`  ${problema}`));
}

if (resultado.correcoes.length > 0) {
    console.log("\n‚úÖ CORRE√á√ïES APLICADAS:");
    resultado.correcoes.forEach((correcao) => console.log(`  ${correcao}`));
}

if (resultado.problemas.length === 0) {
    console.log("üéâ TUDO FUNCIONANDO CORRETAMENTE!");
} else {
    console.log("\nüí° PR√ìXIMOS PASSOS:");
    console.log("1. Aguarde 2-3 segundos para verifica√ß√£o p√≥s-corre√ß√£o");
    console.log("2. Recarregue a p√°gina se problemas persistirem");
    console.log("3. Execute este diagn√≥stico novamente");
}

console.log("\nüîß COMANDOS √öTEIS:");
console.log(
    "‚Ä¢ Status ultra-performance: window.SENT1_AUTO.statusModoUltraPerformance()"
);
console.log("‚Ä¢ For√ßar √≠cones: window.SENT1_AUTO.forcarReaplicacaoIcones()");
console.log("‚Ä¢ Diagn√≥stico √≠cones: window.SENT1_AUTO.diagnosticarIconesCSS()");
console.log(
    "‚Ä¢ Executar este diagn√≥stico novamente: Execute este script novamente"
);

console.log("\nüèÅ DIAGN√ìSTICO FINALIZADO");
