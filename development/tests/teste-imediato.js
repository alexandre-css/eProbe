// üö® TESTE IMEDIATO - Cole este c√≥digo no console do eProc

// Verificar se a extens√£o est√° carregada
if (typeof window.SENT1_AUTO === "undefined") {
    console.error("‚ùå EXTENS√ÉO N√ÉO CARREGADA!");
    console.log("üîß FA√áA ISSO:");
    console.log("1. V√° para chrome://extensions/");
    console.log("2. Clique no √≠cone reload (‚Üª) da extens√£o eProbe");
    console.log("3. Recarregue esta p√°gina do eProc");
    console.log("4. Aguarde 10 segundos e tente novamente");
} else {
    console.log("‚úÖ EXTENS√ÉO CARREGADA!");

    // Verificar fun√ß√µes espec√≠ficas
    const funcoesStatus = [
        "testarSistemaStatusSessao",
        "debugPadroesStatusSessao",
        "forcarStatusSessao",
    ];
    let todasDisponiveis = true;

    console.log("\nüìã VERIFICANDO FUN√á√ïES DE STATUS:");
    funcoesStatus.forEach((funcao) => {
        if (typeof window.SENT1_AUTO[funcao] === "function") {
            console.log(`‚úÖ ${funcao}: OK`);
        } else {
            console.error(`‚ùå ${funcao}: FALTANDO`);
            todasDisponiveis = false;
        }
    });

    if (todasDisponiveis) {
        console.log("\nüéâ TUDO PRONTO! Execute estes comandos:");
        console.log("");
        console.log("window.SENT1_AUTO.testarSistemaStatusSessao()");
        console.log("window.SENT1_AUTO.debugPadroesStatusSessao()");
        console.log("window.SENT1_AUTO.forcarStatusSessao('julgado')");
    } else {
        console.log("\n‚ùå ALGUMAS FUN√á√ïES EST√ÉO FALTANDO!");
        console.log("üîß Recarregue a extens√£o e tente novamente");
    }
}
