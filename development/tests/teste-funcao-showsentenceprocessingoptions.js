// üß™ TESTE ESPEC√çFICO - showSentenceProcessingOptions
// Arquivo: development/tests/teste-funcao-showsentenceprocessingoptions.js

console.log("üß™ TESTE: Verificando fun√ß√£o showSentenceProcessingOptions");

// 1. Verificar se o namespace SENT1_AUTO existe
if (typeof window.SENT1_AUTO === "undefined") {
    console.error("‚ùå Namespace SENT1_AUTO n√£o encontrado!");
} else {
    console.log("‚úÖ Namespace SENT1_AUTO encontrado");

    // 2. Verificar se a fun√ß√£o est√° dispon√≠vel no namespace
    if (
        typeof window.SENT1_AUTO.showSentenceProcessingOptions === "undefined"
    ) {
        console.error(
            "‚ùå Fun√ß√£o showSentenceProcessingOptions n√£o encontrada no namespace!"
        );
    } else {
        console.log(
            "‚úÖ Fun√ß√£o showSentenceProcessingOptions encontrada no namespace"
        );
        console.log(
            "Tipo:",
            typeof window.SENT1_AUTO.showSentenceProcessingOptions
        );

        // 3. Tentar executar a fun√ß√£o (com mock dos elementos necess√°rios)
        try {
            console.log("üß™ Testando execu√ß√£o da fun√ß√£o...");

            // Mock da fun√ß√£o findDocumentosRelevantes se n√£o existir
            if (
                typeof window.SENT1_AUTO.findDocumentosRelevantes ===
                "undefined"
            ) {
                console.warn(
                    "‚ö†Ô∏è findDocumentosRelevantes n√£o encontrada, criando mock..."
                );
                window.mockDocumentos = [
                    { href: "http://exemplo1.com", textContent: "Senten√ßa 1" },
                    { href: "http://exemplo2.com", textContent: "Senten√ßa 2" },
                ];
                window.SENT1_AUTO.findDocumentosRelevantes = () =>
                    window.mockDocumentos;
            }

            // Mock da fun√ß√£o showNotification se n√£o existir
            if (typeof window.SENT1_AUTO.showNotification === "undefined") {
                console.warn(
                    "‚ö†Ô∏è showNotification n√£o encontrada, criando mock..."
                );
                window.SENT1_AUTO.showNotification = (msg, type) => {
                    console.log(`üîî Mock Notification [${type}]: ${msg}`);
                };
            }

            // Tentar chamar a fun√ß√£o
            window.SENT1_AUTO.showSentenceProcessingOptions();
            console.log("‚úÖ Fun√ß√£o executada sem erros imediatos");
        } catch (error) {
            console.error("‚ùå Erro ao executar fun√ß√£o:", error);
        }
    }
}

console.log("üèÅ Teste showSentenceProcessingOptions conclu√≠do");
