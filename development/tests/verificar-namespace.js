// üîç SCRIPT PARA VERIFICAR NAMESPACE eProbe
// Execute este script no console da p√°gina do eProc

console.log("üîç VERIFICANDO NAMESPACE eProbe");
console.log("===============================");

// 1. Verificar se window.SENT1_AUTO existe
console.log("\nüì¶ 1. VERIFICA√á√ÉO DO NAMESPACE");
console.log("window.SENT1_AUTO existe:", typeof window.SENT1_AUTO);
console.log("√â um objeto:", typeof window.SENT1_AUTO === "object");

if (typeof window.SENT1_AUTO === "undefined") {
    console.log("‚ùå PROBLEMA: window.SENT1_AUTO n√£o existe!");
    console.log("üí° SOLU√á√ÉO: Recarregue a p√°gina ou reinstale a extens√£o");
    return;
}

// 2. Verificar fun√ß√µes principais esperadas
console.log("\nüîß 2. VERIFICA√á√ÉO DE FUN√á√ïES PRINCIPAIS");
const funcoesEsperadas = [
    "detectarDataSessao",
    "getDataSessaoPautado",
    "hasDataSessaoPautado",
    "inserirDataSessaoNaInterface",
    "testarCriacaoCard",
    "forcarInsercaoCardSemValidacao",
    "diagnosticoCompletoCard",
    "forcarDeteccaoDataSessao",
];

const statusFuncoes = {};
funcoesEsperadas.forEach((funcao) => {
    const existe = typeof window.SENT1_AUTO[funcao];
    statusFuncoes[funcao] = existe;
    const icone = existe === "function" ? "‚úÖ" : "‚ùå";
    console.log(`${icone} ${funcao}: ${existe}`);
});

// 3. Contar total de fun√ß√µes dispon√≠veis
console.log("\nüìä 3. ESTAT√çSTICAS DO NAMESPACE");
const todasFuncoes = Object.keys(window.SENT1_AUTO);
const funcoesFuncionais = todasFuncoes.filter(
    (key) => typeof window.SENT1_AUTO[key] === "function"
);
const funcoesFaltando = funcoesEsperadas.filter(
    (f) => typeof window.SENT1_AUTO[f] !== "function"
);

console.log(`Total de propriedades: ${todasFuncoes.length}`);
console.log(`Fun√ß√µes funcionais: ${funcoesFuncionais.length}`);
console.log(`Fun√ß√µes esperadas: ${funcoesEsperadas.length}`);
console.log(`Fun√ß√µes faltando: ${funcoesFaltando.length}`);

if (funcoesFaltando.length > 0) {
    console.log("‚ùå FUN√á√ïES FALTANDO:", funcoesFaltando);
}

// 4. Verificar se content script foi carregado
console.log("\nüåê 4. VERIFICA√á√ÉO DO CONTENT SCRIPT");
console.log("URL atual:", window.location.href);
console.log("√â p√°gina eProc:", window.location.href.includes("eproc"));
console.log("Extension context:", typeof chrome?.runtime);

// 5. Tentar fun√ß√µes b√°sicas que devem funcionar
console.log("\nüß™ 5. TESTE DE FUN√á√ïES B√ÅSICAS");

try {
    if (typeof window.SENT1_AUTO.hasDataSessaoPautado === "function") {
        const hasData = window.SENT1_AUTO.hasDataSessaoPautado();
        console.log("‚úÖ hasDataSessaoPautado():", hasData);
    } else {
        console.log("‚ùå hasDataSessaoPautado n√£o est√° dispon√≠vel");
    }

    if (typeof window.SENT1_AUTO.getDataSessaoPautado === "function") {
        const getData = window.SENT1_AUTO.getDataSessaoPautado();
        console.log("‚úÖ getDataSessaoPautado():", getData);
    } else {
        console.log("‚ùå getDataSessaoPautado n√£o est√° dispon√≠vel");
    }
} catch (error) {
    console.log("‚ùå ERRO ao testar fun√ß√µes b√°sicas:", error.message);
}

// 6. Instru√ß√µes de corre√ß√£o
console.log("\nüîß 6. INSTRU√á√ïES DE CORRE√á√ÉO");

if (funcoesFaltando.length === 0) {
    console.log("‚úÖ Todas as fun√ß√µes est√£o dispon√≠veis!");
    console.log("üí° Voc√™ pode executar:");
    console.log("   window.SENT1_AUTO.testarCriacaoCard()");
    console.log("   window.SENT1_AUTO.diagnosticoCompletoCard()");
} else {
    console.log("‚ùå Algumas fun√ß√µes est√£o faltando.");
    console.log("üí° SOLU√á√ïES:");
    console.log("1. Recarregue a p√°gina (F5)");
    console.log("2. Desabilite e reabilite a extens√£o");
    console.log("3. Reinstale a extens√£o se necess√°rio");
    console.log("4. Verifique se est√° em uma p√°gina do eProc");
}

// 7. Exportar resultado para debug
window.debugNamespace = {
    existe: typeof window.SENT1_AUTO !== "undefined",
    statusFuncoes,
    funcoesFaltando,
    totalFuncoes: todasFuncoes.length,
    funcoesFuncionais: funcoesFuncionais.length,
};

console.log("\nüìã RESULTADO SALVO EM: window.debugNamespace");
console.log(window.debugNamespace);
