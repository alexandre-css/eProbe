{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Testar Extens√£o eProbe",
			"type": "shell",
			"command": "echo 'Para testar a extens√£o, siga estes passos:'; echo ''; echo '1. Abra o Edge'; echo '2. V√° para edge://extensions/'; echo '3. Ative o \"Modo do desenvolvedor\"'; echo '4. Clique em \"Carregar sem compacta√ß√£o\"'; echo '5. Selecione a pasta c:\\eProbe'; echo '6. Navegue para uma p√°gina do eProc'; echo '7. Verifique se o bot√£o \"AUTOMA√á√ÉO SENT1\" aparece integrado na p√°gina'; echo ''; echo 'O bot√£o agora tenta se integrar na estrutura da p√°gina do eProc.'; echo 'Se n√£o encontrar um container adequado, usa posi√ß√£o fixa como fallback.'",
			"group": "test"
		},
		{
			"label": "Verificar Namespace eProbe",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"echo 'üîç VERIFICANDO NAMESPACE EPROBE...'; echo ''; $content = Get-Content 'src/main.js' -Raw; $functions = ($content | Select-String -Pattern '^\\s*function\\s+(\\w+)' -AllMatches).Matches; $namespace = $content -match 'window\\.SENT1_AUTO\\s*=\\s*\\{[\\s\\S]*?\\}'; echo \"üìä Fun√ß√µes encontradas: $($functions.Count)\"; echo \"üéØ Namespace encontrado: $namespace\"; echo ''; if ($functions.Count -gt 0) { echo 'üìã FUN√á√ïES ENCONTRADAS:'; foreach ($func in $functions) { $funcName = $func.Groups[1].Value; echo \"  - $funcName\"; if ($content -match \"$funcName,\") { echo \"    ‚úÖ No namespace\" } else { echo \"    ‚ùå FALTANDO no namespace\" } } }"
			],
			"group": {
				"kind": "test",
				"isDefault": true
			},
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "Detectar ReferenceError Potenciais",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"echo 'üîç DETECTANDO REFERENCEERROR POTENCIAIS...'; echo ''; $content = Get-Content 'src/main.js' -Raw; echo '‚ö†Ô∏è VARI√ÅVEIS POTENCIALMENTE PROBLEM√ÅTICAS:'; $problemVars = @('buttonCreationAttempts', 'processosJaProcessados', 'MAX_BUTTON_CREATION_ATTEMPTS', 'jQueryDetected', 'jQueryIntercepted'); foreach ($var in $problemVars) { $declarations = ($content | Select-String -Pattern \"let\\s+$var|const\\s+$var|var\\s+$var\" -AllMatches).Matches.Count; $usages = ($content | Select-String -Pattern \"\\b$var\\b\" -AllMatches).Matches.Count; echo \"üìä $var: $declarations declara√ß√µes, $usages usos\"; if ($declarations -eq 0 -and $usages -gt 0) { echo \"  ‚ùå PROBLEMA: Usado sem declara√ß√£o\"; } elseif ($declarations -gt 1) { echo \"  ‚ö†Ô∏è AVISO: M√∫ltiplas declara√ß√µes\"; } else { echo \"  ‚úÖ OK\"; } }"
			],
			"group": "test",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			}
		}
	]
}